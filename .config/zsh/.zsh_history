php artisan make:migration linkage
php artisan make:seeder LinkageSeeder
php artisan migrate
php artisan db:seed
composer install barryvdh/laravel-cors
composer require barryvdh/laravel-cors
composer require "laravel/framework"
composer require "laravel/tinker"
composer install
php artisan serve
composer require "barryvdh/laravel-cors"
composer update
composer require "tymon/jwt-auth"
composer require tymon/jwt-auth:*
composer require "tymon/jwt-auth:*"
docker run -v $(pwd):/app composer install
cd ./docker
yay -Ss docker-compose
sudo pacman -S docker-compose
docker-compose up -d
docker-compose exec php php artisan key:generate
docker-compose exec php php artisan jwt:generate
nest g user
nest g resource userz
nest g resource users
yarn remove @prisma/cli
yarn add prisma --dev
yarn prisma --help
cp src/config.ts.example src/config.ts
cp prisma/.env.example prisma/.env
yarn start
npx prisma migrate save --experimental
yarn add class-transformer
yarn add class-validator
yarn add jsonwebtoken
yarn add passport-jwt
yarn add slug swagger-ui-express
yarn add crypto crypto-js
yarn add @prisma/client
yarn add -D prisma
rm -rf prisma
npx prisma
yarn prisma
yarn prisma init
yarn prisma migrate dev --name init\

npx prisma migrate dev --name init
yarn prisma migrate dev --name init
nest g resource post
cd Documents/
mkdir pamfapi
rm pamfapi
rmdir pamfapi
nest new pamfapi
cd pamfapi
yarn add @nestjs/config\

nest g resource user
yarn add class-validator class-transformer
yarn add compression
yarn add @nestjs/swagger
yarn add helmet
yarn add -D @types/passport
yarn add -D @types/passport-headerapikey
yarn add @nestjs/passport passport passport-local
yarn add -D @types/passport-local
nest g module auth
nest g service auth
nest g module users
nest g service users
yarn add @nestjs/jwt passport-jwt
yarn add -D @types/passport-jwt
nest g resource accounts
yarn add @nestjs/axios
dotnet dev-certs https --trust
pwd
php artisan migrate:refresh
dotnet-ef install Microsoft.EntityFrameworkCore.SqlServer
dotnet add Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet-ef dbcontext scaffold "Server=192.168.123.16;Database=QRCode;User ID=andrianina;Password=Debianlnx1$;TrustServerCertificate=true;" Microsoft.EntityFrameworkCore.SqlServer -o Models
dotnet-ef dbcontext scaffold "Server=192.168.123.16;Database=QRCode;User ID=andrianina;Password=Debianlnx1$;TrustServerCertificate=true;" Microsoft.EntityFrameworkCore.SqlServer -o Models --data-annotations
dotnet user-secrets init
dotnet user-secrets set "ConnectionStrings:ContosoPizza" "Server=192.168.123.16;Database=QRCode;User ID=andrianina;Password=Debianlnx1$;TrustServerCertificate=true;"
dotnet build
dotnet-ef dbcontext scaffold "Server=192.168.123.16;Database=QRCode;User ID=andrianina;Password=Debianlnx1$;TrustServerCertificate=true;" Microsoft.EntityFrameworkCore.SqlServer --context-dir Data --output-dir Models/Generated --context-namespace ContosoPizza.Data --namespace ContosoPizza.Models --data-annotations
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
dotnet tool install -g dotnet-aspent-codegenerator
dotnet tool install -g dotnet-aspnet-codegenerator
dotnet-aspnet-codegenerator razorpage --model User --dataContext QrcodeContext --relativeFolderPath Pages/Customers --referenceScriptLibraries
dotnet-aspnet-codegenerator razorpage --model User --dataContext QrcodeContext --relativeFolderPath Pages/Users --referenceScriptLibraries
dotnet-aspnet-codegenerator razorpage --model Role --dataContext QrcodeContext --relativeFolderPath Pages/Roles --referenceScriptLibraries
dotnet run
cls
nest g resource contact
nest g resource loan
yarn add @nestjs/axios axios
nest g resource account
nest g s aspekt
nest g s shared/aspekt
yarn
nest g module shared
git init
git config --global user.email "a.rabakoson@pamf.mg"
git config --global user.name "arabakoson"
git commit -m "Initialize project"
npx gts init
yarn start:dev
yarn fix
lear
yarn clean
git restore .
git add .
git status
git commit -m "Add google style guide"
yarn lint
clear
cd ..
rm -rf pamf-api-gateway
nest new pamf-api-gateway
codium pamf-api-gateway
cd pamf-api-gateway
codium .
git init
git add .
git commit -m "Initialize project"
git branch -M main
npx gts init
git commit -m "Add google style guide"
yarn lint
git commit -m "Apply google style guide"
yarn add helmet
git commit -m "Add helmet"
git commit -m "Enable cors"
yarn start:dev
yarn add compression
yarn add -D @types/compression
yarn fix
git add .
git commit -m "Enable compression"
git loh
git log
git status
node build/src/main.js
docker images
clear
docker build . -t pamf-api-gateway
docker run -p 3000:3000 pamf-api-gateway
yarn start
yarn start:dev
clear
docker build . -t pamf-api-gateway
nest new pamf-api-gateway
cd pamf-api-gateway
git init
git add .
git commit -m "Initialize project"
npx install-peerdeps --dev eslint-config-airbnb-base\

npm install eslint-config-airbnb-typescript --save-deev
npm install eslint-config-airbnb-typescript --save-dev
npm run start:dev
git add .prettierrc
git commit -m "Customize prettier"
node dist/main.js
npm stat
npm start
docker build . -t pamf-api-gateway
docker run -p 3000:3000 pamf-api-gateway
git restore .
git branch contact
git branch -M main
git switch contact
nest g module contact
git status
git g resource contact
clear
nest g resource contact
nest g --help
nest gen resource contact
cd ..
rm -rf pamf-api-gateway
clear
cd Documents
nest new pamf-api-gateway
git init
git commit -m "Initialize project"
git add .
git commit -m "Customize prettier"
git branch -M main
git branch contact
git switch contact
git switch main
nest g resource contact
nest run start:dev
npm run start:dev
npm run format
clear
cd ..
rm -rf pamf-api-gateway
nest new pamf-api-gateway
git init
git add .
git commit -m "Initialize project"
clear
nest g resource contact
git commit -m "Customize prettier"
git branch -M main
git branch contact
git switch contact
nest g resource contact
git add .
git commit -m "Init contact module"
lear
git switch main
git branch docker
git switch docker
npm run start:dev
docker build . -t pamf-api-gateway
clear
cd ..
rm -rf pamf-api-gateway
nest new pamf-api-gateway
git init
git commit -m "Initialize project"
git commit -m "Customize prettier"
git branch -M main
git branch docker
git switch docker
touch Dockerfile
docker run --name pamfproxyapi2 -p 3000:3000 pamf-api-gateway
docker run --name pamfproxyapi3 -p 3000:3000 pamf-api-gateway
git restore src/app.service.ts
git commit -m "Setup Containerization"
git merge docker
git branch -D docker
git branch
docker run --name pamfproxyapi1 -p 3000:3000 pamf-api-gateway
git commit -m "Add dist folder to gitignore"
git branch swagger
git switch swagger
npm install --save @nestjs/swagger
cleaer
git commit -m "Setup swagger"
git merge swagger
git branch -D swagger
git branch common 
git switch common
nest g module common
nest g f exception
nest g f common/exception
nest g f common/all-exception
npm run format
git restore .
git add src/app.service.ts
git commit -m "Add shutdown handler"
git commit -m "Add ExceptionFilter"
nest g i common/logging-interceptor
nest g itc common/logging-interceptor
nest g itc common/logging
nest g s common/logger
nest g s common/custom-logger
git restore src/common/common.module.ts
npm run start:dev
git add src/main.ts src/common/interceptors/
git commit -m "Add LogginInterceptor"
git add .
git restore --staged src/app.module.ts
git status
git restore src/app.module.ts
git switch main
git merge common
git branch -D common
docker build . -t pamf-api-gateway
docker run --name pamfproxyapi -p 3000:3000 pamf-api-gateway
clear
git restore --staged src/common/filters/all-exception.filter.ts
git commit -m "Setup config"
git restore .
npm run format
git add .
git commit -m "Format code"
git status
git switch main
git merge config
clear
git branch compose
git switch compose
touch docker-compose.yml
docker compose up -d
docker compose -f docker-compose.preprod.yml down
git add src/common/common.module.ts
git commit -m "Add 5 seconds timeout to Http module"
npm run start:dev
docker compose -f docker-compose.preprod.yml up -d
git status
clear
git commit -m "Add docker compose preprod file"
git commit -m "Delete app controller spec"
git merge compose
git branch -D compose
git log
npm run start:dev
git diff
git add .
git commit -m "Refactor configs"
git status
git switch main
git branch -D prisma
git branch prisma
git switch prisma
npm install prisma --save-dev
npx prisma
npx prisma init
npx prisma migrate dev --name init
npm install dotenv-cli --save-dev
clear
npm uninstall dotenv-cli --save-dev
npm install dotenv-cli
npm uninstall dotenv-cli
npx prisma migrate dev --name init
npm install @prisma/client
nest g s common/prisma
git commit -m "Setup prisma"
nest g module linkage-platform
nest g resource linkage-platform
clear
git commit -m "Add linkage platform start"
git merge prisma
git branch -D prisma
git branch DTO
git switch DTO
npm i --save class-validator class-transformer
npm run start:dev
git diff
git commit -m "Setup validation"
git switch main
git merge DTO
git branch -D DTO
git branch -D config
npm run format
git add .
git commit -m "Format code"
git branch aspket-service
git switch aspket-service
nest g s common/aspekt
git status
npx prisma generate
npx prisma migrate reset
clear
npx prisma db pull
git status
cleaer
clear
nest generate app auth
nest generate library common
git init
git commit -m "Initialize project"
git branch -M main
npm i uuid
npm i @types/uuid --save-dev
npm install @prisma/client
npm run start:dev
nest generate app linkage-platform
git status
git add .
git commit -m "Setup common libs"
clear
nest generate app logger
virtualenv infra
source infra/bin/activate
pip install diagrams
python diagram.py
source /home/andrianina/Documents/infrak8s/infra/bin/activate
python diagram.py
source /home/andrianina/Documents/infrak8s/infra/bin/activate
source /home/andrianina/Documents/infrak8s/infra/bin/activate
clear
python diagram.py
git log
git stash 
git status
git switch main
clear
git remote add origin git@github.com:rbaks/pamf.git
git push -u origin main
git switch aspket-service
git push -u origin aspekt
git push -u origin aspket-service
git stash pop
git status
nest g s common/aspekt
npm run start:dev
clear
kubectl apply -f mongodb-secret.yml
kubectl get secrets
kubectl apply -f configmap.yaml
kubectl apply -f mongo-express.yaml
kubectl apply -f mongodb.yaml
kubectl create -f namespace.yaml
kubectl describe pod metrics-grafana-6db68d8cb4-bdzn9
kind delete cluster --name localdev
kind create cluster localdev
kind create cluster --name localdev
kubectl create -f namespace.yaml
kubectl create -f templates/namespace.yaml
helm install metrics .*
helm
helm list
helm list --help
helm list -1
helm uninstall metrics
helm list --all-namespaces
kubectl get namespaces
helm install metrics .
kubectl get all
kubectl port-forward --help
kubectl port-forward deployment.apps/metrics-grafana 9090
helm list -A
helm uninstall -n default metrics
ls
kubectl get all 
clear
helm dependency update
helm install metrics . -n metrics
kubectl port-forward service/metrics-grafana 3000 -n metrics
kubectl port-forward service/metrics-grafana 3000:80 -n metrics
kubectl port-forward service/metrics-grafana 80:3000 -n metrics
kubectl get all --namespace metrics
kubectl port-forward metrics-grafana-d94cd5dcc-2xz9j 3000:80 -n metrics
kubectl port-forward replicaset.apps/metrics-grafana-d94cd5dcc 3000 -n metrics
clear
clear
helm 
helm version
clear
cd ..
rm -rf efk-stack
mkdir logging
cd logging
helm create efk
cd ..
clear
helm create nests-metrics
cd nests-metrics
helm dependency update
helm list -A
helm uninstall metrics -n metrics
kubectl get namespaces
helm install metrics . -n metrics
kubectl describe pod metrics-grafana-774744fcc4-rq7pd -n metrics
lear
helm upgrade metrics . -n metrics
clear
kubectl get all --namespace metrics
helm list -A
helm uninstall metrics -n metrics
helm install metrics . -n metrics
kubectl get all --watch --namespace metrics
kubectl describe pod metrics-grafana-5ff7c4bb6d-tcmnd -n metrics
helm upgrade metrics . -n metrics
clear
kubectl get all --namespace metrics
